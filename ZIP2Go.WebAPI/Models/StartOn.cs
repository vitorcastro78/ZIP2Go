/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://developer.zuora.com/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * OpenAPI spec version: 2024-01-10
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace ZIP2Go.WebAPI.Models
{
    /// <summary>
    /// Container for the contract effective, service activation, and customer acceptance dates of the order action or subscription.  &lt;ul&gt;  &lt;li&gt; If [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the &#x60;service_activation&#x60; field is not set for a &#x60;subscription_plans&#x60; order action or the \&quot;Create a subscription\&quot; operation, a &#x60;pending&#x60; order and/or a &#x60;pending_activation&#x60; subscription are created.&lt;/li&gt;   &lt;li&gt; If [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the &#x60;customer_acceptance&#x60; field is not set for a &#x60;subscription_plans&#x60; order action or the \&quot;Create a subscription\&quot; operation, a &#x60;pending&#x60; order and/or a &#x60;pending_acceptance&#x60; subscription are created. At the same time, if the service activation date field is also required and not set, a &#x60;pending&#x60; order and/or a &#x60;pending_activation&#x60; subscription are created instead.&lt;/li&gt;   &lt;li&gt; If [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the &#x60;service_activation&#x60; field is not set for any of the following order actions or the \&quot;Update a subscription\&quot; operation, a &#x60;pending&#x60; order is created. The subscription status is not impacted. **Note**: This feature is in Limited Availability. If you want to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com/).   &lt;ul&gt;   &lt;li&gt;&#x60;add_subscription_plans&#x60;&lt;/li&gt;   &lt;li&gt;&#x60;update_subscription_plans&#x60;&lt;/li&gt;   &lt;li&gt;&#x60;remove_subscription_plans&#x60;&lt;/li&gt;   &lt;li&gt;&#x60;renew&#x60;&lt;/li&gt;   &lt;li&gt;&#x60;terms&#x60;&lt;/li&gt;   &lt;/li&gt;&lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt; If [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the &#x60;customer_acceptance&#x60; field is not set for any of the following order actions or the \&quot;Update a subscription\&quot; operation, a &#x60;pending&#x60; order is created. The subscription status is not impacted. Note: This feature is in Limited Availability. If you want to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com/).     &lt;ul&gt;     &lt;li&gt;&#x60;add_subscription_plans&#x60;&lt;/li&gt;     &lt;li&gt;&#x60;update_subscription_plans&#x60;&lt;/li&gt;     &lt;li&gt;&#x60;remove_subscription_plans&#x60;&lt;/li&gt;     &lt;li&gt;&#x60;renew&#x60;&lt;/li&gt;     &lt;li&gt;&#x60;terms&#x60;&lt;/li&gt;     &lt;/li&gt;&lt;/ul&gt;   
    /// </summary>
    [DataContract]
    public partial class StartOn : IEquatable<StartOn>
    { 
        /// <summary>
        /// Effective contract date for this subscription, in the &#x60;yyyy-mm-dd&#x60; format.
        /// </summary>
        /// <value>Effective contract date for this subscription, in the &#x60;yyyy-mm-dd&#x60; format.</value>
        [Required]

        [DataMember(Name="contract_effective")]
        public DateTime? ContractEffective { get; set; }

        /// <summary>
        /// The date on which the services or products within a subscription have been activated and access has been provided to the customer, as the &#x60;yyyy-mm-dd&#x60; format.       &lt;ul&gt;        &lt;li&gt; If [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the &#x60;service_activation&#x60; field is not set for a &#x60;subscription_plans&#x60; order action or the \&quot;Create a subscription\&quot; operation, a &#x60;pending&#x60; order and/or a &#x60;pending_activation&#x60; subscription are created.&lt;/li&gt;         &lt;li&gt; If [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the &#x60;service_activation&#x60; field is not set for any of the following order actions or the \&quot;Update a subscription\&quot; operation, a &#x60;pending&#x60; order is created. The subscription status is not impacted. **Note**: This feature is in Limited Availability. If you want to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com/).         &lt;ul&gt;           &lt;li&gt;&#x60;add_subscription_plans&#x60;&lt;/li&gt;           &lt;li&gt;&#x60;update_subscription_plans&#x60;&lt;/li&gt;           &lt;li&gt;&#x60;remove_subscription_plans&#x60;&lt;/li&gt;           &lt;li&gt;&#x60;renew&#x60;&lt;/li&gt;           &lt;li&gt;&#x60;terms&#x60;&lt;/li&gt;           &lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;
        /// </summary>
        /// <value>The date on which the services or products within a subscription have been activated and access has been provided to the customer, as the &#x60;yyyy-mm-dd&#x60; format.       &lt;ul&gt;        &lt;li&gt; If [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the &#x60;service_activation&#x60; field is not set for a &#x60;subscription_plans&#x60; order action or the \&quot;Create a subscription\&quot; operation, a &#x60;pending&#x60; order and/or a &#x60;pending_activation&#x60; subscription are created.&lt;/li&gt;         &lt;li&gt; If [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the &#x60;service_activation&#x60; field is not set for any of the following order actions or the \&quot;Update a subscription\&quot; operation, a &#x60;pending&#x60; order is created. The subscription status is not impacted. **Note**: This feature is in Limited Availability. If you want to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com/).         &lt;ul&gt;           &lt;li&gt;&#x60;add_subscription_plans&#x60;&lt;/li&gt;           &lt;li&gt;&#x60;update_subscription_plans&#x60;&lt;/li&gt;           &lt;li&gt;&#x60;remove_subscription_plans&#x60;&lt;/li&gt;           &lt;li&gt;&#x60;renew&#x60;&lt;/li&gt;           &lt;li&gt;&#x60;terms&#x60;&lt;/li&gt;           &lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;</value>

        [DataMember(Name="service_activation")]
        public DateTime? ServiceActivation { get; set; }

        /// <summary>
        /// The date on which the services or products within a subscription have been accepted by the customer, in the &#x60;yyyy-mm-dd&#x60; format.      &lt;ul&gt;       &lt;li&gt; If [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the &#x60;customer_acceptance&#x60; field is not set for a &#x60;subscription_plans&#x60; order action or the \&quot;Create a subscription\&quot; operation, a &#x60;pending&#x60; order and/or a &#x60;pending_acceptance&#x60; subscription are created. At the same time, if the service activation date field is also required and not set, a &#x60;pending&#x60; order and/or a &#x60;pending_activation&#x60; subscription are created instead.&lt;/li&gt;       &lt;li&gt;       If [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the &#x60;customer_acceptance&#x60; field is not set for any of the following order actions or the \&quot;Update a subscription\&quot; operation, a &#x60;pending&#x60; order is created. The subscription status is not impacted. **Note**: This feature is in Limited Availability. If you want to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com/).       &lt;ul&gt;       &lt;li&gt;&#x60;add_subscription_plans&#x60;&lt;/li&gt;       &lt;li&gt;&#x60;update_subscription_plans&#x60;&lt;/li&gt;       &lt;li&gt;&#x60;remove_subscription_plans&#x60;&lt;/li&gt;       &lt;li&gt;&#x60;renew&#x60;&lt;/li&gt;       &lt;li&gt;&#x60;terms&#x60;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;       &lt;/ul&gt;       
        /// </summary>
        /// <value>The date on which the services or products within a subscription have been accepted by the customer, in the &#x60;yyyy-mm-dd&#x60; format.      &lt;ul&gt;       &lt;li&gt; If [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the &#x60;customer_acceptance&#x60; field is not set for a &#x60;subscription_plans&#x60; order action or the \&quot;Create a subscription\&quot; operation, a &#x60;pending&#x60; order and/or a &#x60;pending_acceptance&#x60; subscription are created. At the same time, if the service activation date field is also required and not set, a &#x60;pending&#x60; order and/or a &#x60;pending_activation&#x60; subscription are created instead.&lt;/li&gt;       &lt;li&gt;       If [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the &#x60;customer_acceptance&#x60; field is not set for any of the following order actions or the \&quot;Update a subscription\&quot; operation, a &#x60;pending&#x60; order is created. The subscription status is not impacted. **Note**: This feature is in Limited Availability. If you want to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com/).       &lt;ul&gt;       &lt;li&gt;&#x60;add_subscription_plans&#x60;&lt;/li&gt;       &lt;li&gt;&#x60;update_subscription_plans&#x60;&lt;/li&gt;       &lt;li&gt;&#x60;remove_subscription_plans&#x60;&lt;/li&gt;       &lt;li&gt;&#x60;renew&#x60;&lt;/li&gt;       &lt;li&gt;&#x60;terms&#x60;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;       &lt;/ul&gt;       </value>

        [DataMember(Name="customer_acceptance")]
        public DateTime? CustomerAcceptance { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StartOn {\n");
            sb.Append("  ContractEffective: ").Append(ContractEffective).Append("\n");
            sb.Append("  ServiceActivation: ").Append(ServiceActivation).Append("\n");
            sb.Append("  CustomerAcceptance: ").Append(CustomerAcceptance).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((StartOn)obj);
        }

        /// <summary>
        /// Returns true if StartOn instances are equal
        /// </summary>
        /// <param name="other">Instance of StartOn to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StartOn other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    ContractEffective == other.ContractEffective ||
                    ContractEffective != null &&
                    ContractEffective.Equals(other.ContractEffective)
                ) && 
                (
                    ServiceActivation == other.ServiceActivation ||
                    ServiceActivation != null &&
                    ServiceActivation.Equals(other.ServiceActivation)
                ) && 
                (
                    CustomerAcceptance == other.CustomerAcceptance ||
                    CustomerAcceptance != null &&
                    CustomerAcceptance.Equals(other.CustomerAcceptance)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (ContractEffective != null)
                    hashCode = hashCode * 59 + ContractEffective.GetHashCode();
                    if (ServiceActivation != null)
                    hashCode = hashCode * 59 + ServiceActivation.GetHashCode();
                    if (CustomerAcceptance != null)
                    hashCode = hashCode * 59 + CustomerAcceptance.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(StartOn left, StartOn right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(StartOn left, StartOn right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
